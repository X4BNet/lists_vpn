name: Build Database Update
on:
  schedule:
    - cron:  '45 8 * * *'
  workflow_dispatch:

jobs:
  build_and_commit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Dependencies
      run: |
        sudo apt-get install ipcalc
    - name: Downloading ASN database
      run: |
        curl https://iptoasn.com/data/ip2asn-v4.tsv.gz | gzip -d > /tmp/asndb.tsv
    - name: ASN -> IP Range
      run: |
        cat "$GITHUB_WORKSPACE/input/${{matrix.list}}/ASN.txt" | grep -v '^#' | awk '{print $1}' | grep '^AS' | while read asn; do
          echo "Processing $asn"
          awk '{if($3 == '${asn:2}') print "ipcalc -rn "$1"-"$2" | tail -n1"}' /tmp/asndb.tsv | bash >> /tmp/asn-processed.txt
        done
    - name: Merge Lists
      run: |
        # Remove too small allocations from ASN list (anything less than a /24 can't be announced)
        # TODO: This might remove some SWIP'ed ranges (needs evaluation)
        perl ./helpers/cleanup.pl /tmp/asn-processed.txt | grep -E '/(2[0-4]|1[0-9]|[0-9])$' > /tmp/asn-cleaned.txt

        # Sort lists
        cat /tmp/asn-cleaned.txt | sort -n > /tmp/ipv4.txt

        # Final cleanup
        perl ./helpers/cleanup.pl /tmp/ipv4.txt > ipv4.txt
    - name: Test generated Lists
      run: |
        if [[ $(grep ^0. ipv4.txt | wc -l) != "0" ]]; then
          echo "Lists can not contain 0.0.0.0/8"
          exit 1
        fi
        if [[ $(grep ^127. ipv4.txt | wc -l) != "0" ]]; then
          echo "Lists can not contain 12.0.0.1/8"
          exit 1
        fi

        ips_covered=$(awk -F/ 'BEGIN{a=0}{if($2==""){a+=1}else{a+=2^(32-$2)}}END{print a}' ipv4.txt)
        if [[ "$ips_covered" -lt 13970713 ]]; then
          echo "Too few addresses covered"
          exit 1
        fi
        if [[ "$ips_covered" -gt 439707136 ]]; then
          echo "Too many addresses covered"
          exit 1
        fi
    - name: Push to output/datacenters/ipv4.txt
      uses: X4BNet/copy_file_to_another_repo_action@main
      env:
        API_TOKEN_GITHUB: ${{ secrets.MY_GITHUB_TOKEN }}
      with:
        source_file: 'ipv4.txt'
        destination_repo: '${{ github.repository }}'
        destination_folder: '/output/datacenters/'
        user_email: 'automated@x4b.net'
        user_name: 'listbuilder'
        destination_branch: "main"
    - name: Test generated Lists
      run: |
        cp ipv4.txt asn.txt
    - name: Push to input/datacenters/ips/asn.txt
      uses: X4BNet/copy_file_to_another_repo_action@main
      env:
        API_TOKEN_GITHUB: ${{ secrets.MY_GITHUB_TOKEN }}
      with:
        source_file: 'ipv4.txt'
        destination_repo: '${{ github.repository }}'
        destination_folder: '/input/datacenters/ips/'
        user_email: 'automated@x4b.net'
        user_name: 'listbuilder'
        destination_branch: "main"